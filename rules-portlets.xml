<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/xdv"
    xmlns:css="http://namespaces.plone.org/xdv+css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    >

    <!-- Transform portlets structure from DL to DIV -->
    <xsl:template match='//*[contains(@class,"portletWrapper")]'>
        <xsl:choose>
            <xsl:when test='dl[contains(concat(" ", @class, " ")," portletNavigationTree ")]'>
                <div>
                    <xsl:apply-templates select='dl/@class'/>
                    <ul>
                        <xsl:apply-templates select='dl/dd/ul/@class'/>
                        <li>
                            <xsl:attribute name="class"><xsl:text>nav-header</xsl:text></xsl:attribute>
                            <xsl:apply-templates select='dl/dt[contains(@class,"portletHeader")]/a'/>
                        </li>
                        <xsl:apply-templates select='dl/dd/ul/*'/>
                    </ul>
                </div>
            </xsl:when>
            <xsl:when test='dl[contains(concat(" ", @class, " ")," portlet ")]'>
                <div>
                    <xsl:attribute name="class">
                        <xsl:value-of select="dl/@class"/>
                    </xsl:attribute>
                    <xsl:apply-templates select='dl/dt[contains(@class,"portletHeader")]'/>
                    <div>
                        <xsl:attribute name="class">portletItems</xsl:attribute>
                        <xsl:apply-templates select='dl/dd[contains(@class,"portletItem")]'/>
                    </div>
                </div>
            </xsl:when>
           <xsl:when test='.//*[contains(@class,"portlet")]'>
                <div>
                    <xsl:attribute name="class">
                        <xsl:if test='.//*[contains(@class,"portlet")]/@class[not(contains(concat(" ", ., " ")," portlet "))]'>
                            <xsl:text>portlet </xsl:text>
                        </xsl:if>
                        <xsl:value-of select='.//*[contains(@class,"portlet")]/@class'/>
                    </xsl:attribute>
                    <xsl:copy-of select='.//*[contains(@class,"portlet")]/*'/>
                </div>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="node()"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match='dt[contains(@class,"portletHeader")] | dd[contains(@class,"portletItem")]'>
        <div>
            <xsl:attribute name="class">
              <xsl:value-of select="./@class"/>
            </xsl:attribute>
            <xsl:apply-templates select="@*|node()"/>
        </div>
    </xsl:template>

    <!--specific template match for navtree -->
    <xsl:template match='@class[contains(concat(" ", ., " ")," navTree ")]'>
        <xsl:attribute name="class">
            <xsl:value-of select="."/>
            <xsl:text> nav nav-list</xsl:text>
        </xsl:attribute>
    </xsl:template>
    <xsl:template match='@class[contains(.,"navTreeCurrentNode")]'>
        <xsl:attribute name="class">
            <xsl:value-of select="."/>
            <xsl:text> active </xsl:text>
        </xsl:attribute>
    </xsl:template>

    <xsl:template match='ul[contains(@class,"navTree")]//li/div'>
        <!-- skip the current DIV and go ahead on children -->
        <xsl:apply-templates />
    </xsl:template>

    <!--Identity template copies content forward -->
    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>

    <!-- END Portlet transform -->

</rules>