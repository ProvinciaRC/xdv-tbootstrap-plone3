<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/xdv"
    xmlns:css="http://namespaces.plone.org/xdv+css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    >

    <!--
        HEAD
    -->
 
    <!-- Head: title -->
    <replace theme="/html/head/title" content="/html/head/title" />

    <!-- Base tag -->
    <replace theme="/html/head/base" content="/html/head/base" />

    <!-- Pull in Plone head's link tags (not css) -->
    <append  content='/html/head/link[not(@rel="stylesheet")]' theme='/html/head' />

    <!-- copy the class of the BODY tag -->
    <prepend theme="/html/body" content="/html/body/attribute::class" />

    <!--
        BODY
    -->

    <!-- move all Scripts at the end of BODY tag -->
    <xsl:template match="/html/body/div//script" />

    <!-- Global navigation -->
    <!-- append class .active to li.select -->
    <xsl:template match='//*[@id="portal-globalnav"]/li[@class="selected"]/@class'>
        <xsl:attribute name="class">
            <xsl:value-of select="."/>
            <xsl:text> active</xsl:text>
        </xsl:attribute>
    </xsl:template>
    <copy css:theme='#portal-globalnav .navbar .nav-collapse .nav ' css:content='#portal-globalnav li' />

    <!-- BANNERONE -->
    <!-- HOME: Inserisce il banner corrente dal contenuto della cartella "banner" del sito -->
    <rules if-content='/html/body[contains(@class,"section-home")]'>
        <drop theme='//*[@id="breadcrumbs"]' />
        <drop theme='//*[@id="bannerWrapper"]/*' />
        <append css:theme="#bannerWrapper" content='//*[@id="parent-fieldname-text"]/*' href="/banner"/>
    </rules>

    <!-- nelle altre pagine sostituisce il banner con il breadcrumbs-->
    <!-- replace "â†’" with "/" -->
    <xsl:template match='//*[@id="portal-breadcrumbs"]//span[@class="breadcrumbSeparator"]'>
        <xsl:copy>
            <xsl:attribute name="class">
                <xsl:value-of select="./@class"/>
                <xsl:text> divider </xsl:text>
            </xsl:attribute>
            <xsl:text>/</xsl:text>
        </xsl:copy>
    </xsl:template>
    <rules if-content='not(/html/body[contains(@class,"section-home")])'>
        <drop theme='//*[@id="breadcrumbs"]/*' />
        <drop theme='//*[@id="bannerWrapper"]' />
        <append css:theme='#breadcrumbs' content='//*[@id="portal-breadcrumbs"]'/>
    </rules>



    <!-- Transform portlets structure from DL to DIV -->
    <xsl:template match='//*[contains(@class,"portletWrapper")]'>
        <xsl:choose>
            <xsl:when test='dl[contains(concat(" ", @class, " ")," portletNavigationTree ")]'>
                <div>
                    <xsl:apply-templates select='dl/@class'/>
                    <ul>
                        <xsl:apply-templates select='dl/dd/ul/@class'/>
                        <li>
                            <xsl:attribute name="class"><xsl:text>nav-header</xsl:text></xsl:attribute>
                            <xsl:apply-templates select='dl/dt[contains(@class,"portletHeader")]/a'/>
                        </li>
                        <xsl:apply-templates select='dl/dd/ul/*'/>
                    </ul>
                </div>
            </xsl:when>
            <xsl:when test='dl[contains(concat(" ", @class, " ")," portlet ")]'>
                <div>
                    <xsl:attribute name="class">
                        <xsl:value-of select="dl/@class"/>
                    </xsl:attribute>
                    <xsl:apply-templates select='dl/dt[contains(@class,"portletHeader")]'/>
                    <div>
                        <xsl:attribute name="class">portletItems</xsl:attribute>
                        <xsl:apply-templates select='dl/dd[contains(@class,"portletItem")]'/>
                    </div>
                </div>
            </xsl:when>
           <xsl:when test='.//*[contains(@class,"portlet")]'>
                <div>
                    <xsl:attribute name="class">
                        <xsl:if test='.//*[contains(@class,"portlet")]/@class[not(contains(concat(" ", ., " ")," portlet "))]'>
                            <xsl:text>portlet </xsl:text>
                        </xsl:if>
                        <xsl:value-of select='.//*[contains(@class,"portlet")]/@class'/>
                    </xsl:attribute>
                    <xsl:copy-of select='.//*[contains(@class,"portlet")]/*'/>
                </div>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="node()"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match='dt[contains(@class,"portletHeader")] | dd[contains(@class,"portletItem")]'>
        <div>
            <xsl:attribute name="class">
              <xsl:value-of select="./@class"/>
            </xsl:attribute>
            <xsl:apply-templates select="@*|node()"/>
        </div>
    </xsl:template>

    <!--specific template match for navtree -->
    <xsl:template match='@class[contains(concat(" ", ., " ")," navTree ")]'>
        <xsl:attribute name="class">
            <xsl:value-of select="."/>
            <xsl:text> nav nav-list</xsl:text>
        </xsl:attribute>
    </xsl:template>
    <xsl:template match='@class[contains(.,"navTreeCurrentNode")]'>
        <xsl:attribute name="class">
            <xsl:value-of select="."/>
            <xsl:text> active </xsl:text>
        </xsl:attribute>
    </xsl:template>

    <xsl:template match='ul[contains(@class,"navTree")]//li/div'>
        <!-- skip the current DIV and go ahead on children -->
        <xsl:apply-templates />
    </xsl:template>

    <!--Identity template copies content forward -->
    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>

    <!-- END Portlet transform -->

    <!-- documentActions as buttons group-->
    <xsl:template match='//*[contains(@class,"documentActions")]'>
        <div>
            <xsl:attribute name="class">
                <xsl:text>documentActions btn-group</xsl:text>
            </xsl:attribute>
            <xsl:apply-templates select="ul/li"/>
        </div>
    </xsl:template>

    <xsl:template match='*[contains(@id,"document-action")]'>
        <a>
            <xsl:attribute name="class">
                <xsl:text> btn btn-small </xsl:text>
            </xsl:attribute>
            <xsl:apply-templates select="@*"/>
            <xsl:apply-templates select="a/@*"/>
            <i>
                <xsl:attribute name="class">
                    <xsl:text> icon-</xsl:text><xsl:value-of select="@id"/>
                </xsl:attribute>
            </i>
            <xsl:text> </xsl:text>
            <xsl:apply-templates select="a/text()"/>
        </a>
    </xsl:template>

    <rules if-content='//*[@id="portal-column-one"]'>
        <!-- Copy over the contents of the first column -->
        <append content='//*[@id="portal-column-one"]/*' theme='//*[@id="column"]' />
        <!-- Copy over the contents of the page body -->
        <append content='//*[@id="content"]/*' theme='//*[@id="content"]' />
        <drop theme='//*[@id="single-column"]' />
    </rules>
    <rules if-content='not(//*[@id="portal-column-one"])'>
        <drop theme='//*[@id="column"]' />
        <drop theme='//*[@id="content"]' />
        <!-- Copy over the contents of the page body -->
        <append content='//*[@id="content"]' theme='//*[@id="single-column"]' />
    </rules>

    <!-- Copy over the contents of the second column -->
    <append content='//*[@id="portal-column-two"]/*'
              theme='//*[@id="footer"]' />


</rules>

